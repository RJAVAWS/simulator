
entity Bank{
	name String required minlength(3) maxlength(150) pattern(/[a-zA-Z ]*/),
    code Integer required min(3) max(10),
    logo String,
    ip String required pattern(/(([0-1]?[0-9]{1,2}\.)|(2[0-4][0-9]\.)|(25[0-5]\.)){3}(([0-1]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))/),
    port String required minlength(4) maxlength(10),
    isoType IsoVersions required,
    signOnOffFlag Boolean required,
    pinExchangeFlag Boolean required,
    macExchangeFlag Boolean required,
    echoFlag Boolean required,
    cutoverFlag Boolean required,
    masterKey String required pattern(/^[a-zA-Z0-9]+$/)
}

 enum IsoVersions {
    GCCISO87, MBIISO93
  }

entity Card{
	cardDescription String required minlength(3) maxlength(255) pattern(/[a-zA-Z0-9 _.]*/),
    cardNumber String required minlength(16) maxlength(19) pattern(/[0-9]*/),
    cvv String required minlength(3) maxlength(3) pattern(/[0-9]*/),
    expiry String required minlength(4) maxlength(4) pattern(/[0-9]*/),
	pin String required minlength(4) maxlength(4) pattern(/[0-9]*/),
	track2data String required pattern(/[a-zA-Z0-9=]*/)
}

entity Emv{
	emvDescription String required minlength(3) maxlength(255) pattern(/[a-zA-Z0-9 _.]*/),
    de5F2A TextBlob,
    de82 TextBlob,
    de84 TextBlob,
    de95 TextBlob,
    de9A TextBlob,
    de9C TextBlob,
    de9F02 TextBlob,
    de9F03 TextBlob,
    de9F09 TextBlob,
    de9F10 TextBlob,
    de9F1A TextBlob,
    de9F1E TextBlob,
    de9F26 TextBlob,
    de9F27 TextBlob,
    de9F33 TextBlob,
    de9F34 TextBlob,
    de9F35 TextBlob,
    de9F36 TextBlob,
    de9F37 TextBlob,
    de9F41 TextBlob,
    de9F53 TextBlob,
    de8A TextBlob,
    de71 TextBlob,
    de72 TextBlob,
    de91 TextBlob,
    others TextBlob
}

entity TestCase{
	caseDescription String required minlength(3) maxlength(255) pattern(/[a-zA-Z0-9 _.]*/),
    psdnType PsdnType required,
    reqResType ReqResType required,
    mti String,
       de001 TextBlob,
    de002 TextBlob,
    de003 TextBlob,
    de004 TextBlob,
    de005 TextBlob,
    de006 TextBlob,
    de007 TextBlob,
    de008 TextBlob,
    de009 TextBlob,
    de010 TextBlob,
    de011 TextBlob,
    de012 TextBlob,
    de013 TextBlob,
    de014 TextBlob,
    de015 TextBlob,
    de016 TextBlob,
    de017 TextBlob,
    de018 TextBlob,
    de019 TextBlob,
    de020 TextBlob,
    de021 TextBlob,
    de022 TextBlob,
    de023 TextBlob,
    de024 TextBlob,
    de025 TextBlob,
    de026 TextBlob,
    de027 TextBlob,
    de028 TextBlob,
    de029 TextBlob,
    de030 TextBlob,
    de031 TextBlob,
    de032 TextBlob,
    de033 TextBlob,
    de034 TextBlob,
    de035 TextBlob,
    de036 TextBlob,
    de037 TextBlob,
    de038 TextBlob,
    de039 TextBlob,
    de040 TextBlob,
    de041 TextBlob,
    de042 TextBlob,
    de043 TextBlob,
    de044 TextBlob,
    de045 TextBlob,
    de046 TextBlob,
    de047 TextBlob,
    de048 TextBlob,
    de049 TextBlob,
    de050 TextBlob,
    de051 TextBlob,
    de052 TextBlob,
    de053 TextBlob,
    de054 TextBlob,
    de055 TextBlob,
    de056 TextBlob,
    de057 TextBlob,
    de058 TextBlob,
    de059 TextBlob,
    de060 TextBlob,
    de061 TextBlob,
    de062 TextBlob,
    de063 TextBlob,
    de064 TextBlob,
    de065 TextBlob,
    de066 TextBlob,
    de067 TextBlob,
    de068 TextBlob,
    de069 TextBlob,
    de070 TextBlob,
    de071 TextBlob,
    de072 TextBlob,
    de073 TextBlob,
    de074 TextBlob,
    de075 TextBlob,
    de076 TextBlob,
    de077 TextBlob,
    de078 TextBlob,
    de079 TextBlob,
    de080 TextBlob,
    de081 TextBlob,
    de082 TextBlob,
    de083 TextBlob,
    de084 TextBlob,
    de085 TextBlob,
    de086 TextBlob,
    de087 TextBlob,
    de088 TextBlob,
    de089 TextBlob,
    de090 TextBlob,
    de091 TextBlob,
    de092 TextBlob,
    de093 TextBlob,
    de094 TextBlob,
    de095 TextBlob,
    de096 TextBlob,
    de097 TextBlob,
    de098 TextBlob,
    de099 TextBlob,
    de100 TextBlob,
    de101 TextBlob,
    de102 TextBlob,
    de103 TextBlob,
    de104 TextBlob,
    de105 TextBlob,
    de106 TextBlob,
    de107 TextBlob,
    de108 TextBlob,
    de109 TextBlob,
    de110 TextBlob,
    de111 TextBlob,
    de112 TextBlob,
    de113 TextBlob,
    de114 TextBlob,
    de115 TextBlob,
    de116 TextBlob,
    de117 TextBlob,
    de118 TextBlob,
    de119 TextBlob,
    de120 TextBlob,
    de121 TextBlob,
    de122 TextBlob,
    de123 TextBlob,
    de124 TextBlob,
    de125 TextBlob,
    de126 TextBlob,
    de127 TextBlob,
    de128 TextBlob
}

enum PsdnType {
    PRIMARY, SECONDARY, DEFAULT, NMM
}

enum ReqResType {
    REQUEST, RESPONSE
}

entity MtiConfig{
	mtiDescription String required minlength(3) maxlength(255) pattern(/[a-zA-Z0-9 _.]*/),
    tnType TranType required,
    isoType IsoVersions,
    mti String required pattern(/[0-9]*/),
    repeatMti String required pattern(/[0-9]*/),
    responseMti String required pattern(/[0-9]*/),
    responseRepeatMti String required pattern(/[0-9]*/),
    nmmIdentifierDe String pattern(/[0-9]*/),
    nmmIdentifierDeVal String pattern(/[0-9]*/),
    responseIdentifierDe String required pattern(/[0-9]*/),
    responseIdentifierDeVal String required pattern(/[0-9]*/)
}

enum TranType {
    NMM, TRANSACTIONS
}

entity KeyConfig {
	pmType PinMacType,
    key String required pattern(/[a-zA-Z0-9]*/),
    kcv String required pattern(/[a-zA-Z0-9]*/),
    status Boolean,
    de01 String,
    de02 String,
    de03 String,
    de04 String,
    de05 String
}

enum PinMacType {
    PIN, MAC
}

entity Transaction{
	tranType AcqIssType,
	status Integer,
    mti String,
        de001 TextBlob,
    de002 TextBlob,
    de003 TextBlob,
    de004 TextBlob,
    de005 TextBlob,
    de006 TextBlob,
    de007 TextBlob,
    de008 TextBlob,
    de009 TextBlob,
    de010 TextBlob,
    de011 TextBlob,
    de012 TextBlob,
    de013 TextBlob,
    de014 TextBlob,
    de015 TextBlob,
    de016 TextBlob,
    de017 TextBlob,
    de018 TextBlob,
    de019 TextBlob,
    de020 TextBlob,
    de021 TextBlob,
    de022 TextBlob,
    de023 TextBlob,
    de024 TextBlob,
    de025 TextBlob,
    de026 TextBlob,
    de027 TextBlob,
    de028 TextBlob,
    de029 TextBlob,
    de030 TextBlob,
    de031 TextBlob,
    de032 TextBlob,
    de033 TextBlob,
    de034 TextBlob,
    de035 TextBlob,
    de036 TextBlob,
    de037 TextBlob,
    de038 TextBlob,
    de039 TextBlob,
    de040 TextBlob,
    de041 TextBlob,
    de042 TextBlob,
    de043 TextBlob,
    de044 TextBlob,
    de045 TextBlob,
    de046 TextBlob,
    de047 TextBlob,
    de048 TextBlob,
    de049 TextBlob,
    de050 TextBlob,
    de051 TextBlob,
    de052 TextBlob,
    de053 TextBlob,
    de054 TextBlob,
    de055 TextBlob,
    de056 TextBlob,
    de057 TextBlob,
    de058 TextBlob,
    de059 TextBlob,
    de060 TextBlob,
    de061 TextBlob,
    de062 TextBlob,
    de063 TextBlob,
    de064 TextBlob,
    de065 TextBlob,
    de066 TextBlob,
    de067 TextBlob,
    de068 TextBlob,
    de069 TextBlob,
    de070 TextBlob,
    de071 TextBlob,
    de072 TextBlob,
    de073 TextBlob,
    de074 TextBlob,
    de075 TextBlob,
    de076 TextBlob,
    de077 TextBlob,
    de078 TextBlob,
    de079 TextBlob,
    de080 TextBlob,
    de081 TextBlob,
    de082 TextBlob,
    de083 TextBlob,
    de084 TextBlob,
    de085 TextBlob,
    de086 TextBlob,
    de087 TextBlob,
    de088 TextBlob,
    de089 TextBlob,
    de090 TextBlob,
    de091 TextBlob,
    de092 TextBlob,
    de093 TextBlob,
    de094 TextBlob,
    de095 TextBlob,
    de096 TextBlob,
    de097 TextBlob,
    de098 TextBlob,
    de099 TextBlob,
    de100 TextBlob,
    de101 TextBlob,
    de102 TextBlob,
    de103 TextBlob,
    de104 TextBlob,
    de105 TextBlob,
    de106 TextBlob,
    de107 TextBlob,
    de108 TextBlob,
    de109 TextBlob,
    de110 TextBlob,
    de111 TextBlob,
    de112 TextBlob,
    de113 TextBlob,
    de114 TextBlob,
    de115 TextBlob,
    de116 TextBlob,
    de117 TextBlob,
    de118 TextBlob,
    de119 TextBlob,
    de120 TextBlob,
    de121 TextBlob,
    de122 TextBlob,
    de123 TextBlob,
    de124 TextBlob,
    de125 TextBlob,
    de126 TextBlob,
    de127 TextBlob,
    de128 TextBlob,
    isoMsg TextBlob
}

enum AcqIssType {
    ACQUIRING, ISSUING
}

relationship OneToOne{
	Card{emv required} to Emv
}

relationship OneToMany{
	Bank{card required} to Card,
    Bank{keyConfig required} to KeyConfig,
    Bank{transaction required} to Transaction,
    
    Card{testCase required} to TestCase,
}


dto * with mapstruct
service all with serviceImpl
paginate all with infinite-scroll


